{
  "Description": "Setting up launch configs",
  "Parameters": {
    "AppAMItype": {
      "Description": "Instance type for app server",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [
        "t1.micro",
        "t2.nano",
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "g2.2xlarge",
        "g2.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "cr1.8xlarge",
        "cc2.8xlarge",
        "cg1.4xlarge"
      ]
    },
    "AppAMI": {
      "Description": "AMI for app server",
      "Type": "String"
    },

    "appKeyName": {
      "Description": "EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },

    "appCloudformationSG": { "Type": "String" },
    "webCloudformationSG": { "Type": "String" },
    "DB": { "Type": "String" },
    "DBPassword": { "Type": "String" },
    "DBUsername": { "Type": "String" }
  },
  "Resources": {
    "appServerLC": {
      "Type": "AWS::EC2::LaunchTemplate",
      "Properties": {
        "LaunchTemplateData": {
          "ImageId": { "Ref": "AppAMI" },
          "InstanceType": { "Ref": "AppAMItype" },
          "KeyName": { "Ref": "appKeyName" },
          "SecurityGroupIds": [{ "Ref": "appCloudformationSG" }],
          "UserData": {
            "Fn::Base64": {
              "Fn::Join": [
                "",
                [
                  "#!/bin/bash\n",
                  "sudo yum install -y epel-release yum-utils\n",
                  "sudo yum install -y http://rpms.remirepo.net/enterprise/remi-release-7.rpm\n",
                  "sudo yum-config-manager --enable remi-php73\n",
                  "sudo yum install -y php php-common php-opcache php-mcrypt php-cli php-gd php-curl php-mysqlnd\n",
                  "sudo yum install -y wget\n",
                  "sudo yum install -y unzip\n",
                  "sudo yum install -y lsof\n",
                  "sudo yum install -y httpd\n",
                  "sudo yum install -y ipset\n",
                  "sudo systemctl start httpd\n",
                  "sudo systemctl enable httpd\n",
                  "sudo setsebool -P httpd_can_network_connect 1\n",
                  "sudo wget https://wordpress.org/latest.tar.gz\n",
                  "tar -xzf latest.tar.gz\n",
                  "cd wordpress\n",
                  "sudo  wget changeme-wordpress-url\n",
                  "sudo sed -i -E 's/admintochange/",
                  { "Ref": "DBUsername" },
                  "/g' ./wp-config.php\n",
                  "sudo sed -i -E 's/PASSWORDTOCHANGE/",
                  { "Ref": "DBPassword" },
                  "/g' ./wp-config.php\n",
                  "sudo sed -i -E 's/dbname.region.rds.amazonaws.com/",
                  { "Ref": "DB" },
                  "/g' ./wp-config.php\n",
                  "sudo rsync -avP * /var/www/html/\n",
                  "sudo chown -R apache:apache /var/www/html/*\n",
                  "sudo systemctl restart httpd\n"
                ]
              ]
            }
          }
        }
      }
    }
  },
  "Outputs": {
    "appLaunchConfig": {
      "Description": "App launchconfig",
      "Value": { "Ref": "appServerLC" },
      "Export": {
        "Name": { "Fn::Sub": "${AWS::StackName}-appServerLC" }
      }
    },

    "appLaunchConfigVersion": {
      "Description": "App launchconfig version",
      "Value": { "Fn::GetAtt": ["appServerLC", "LatestVersionNumber"] },
      "Export": {
        "Name": { "Fn::Sub": "${AWS::StackName}-appLCVersion" }
      }
    }
  }
}
